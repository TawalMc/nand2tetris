// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
		DMux8Way(in=load, sel=address[0..2], 
		 	a=ramload1, b=ramload2, c=ramload3, d=ramload4, 
			e=ramload5, f=ramload6, g=ramload7, h=ramload8);

		RAM4K(in=in, load=ramload1, address=address[2..13], out=ramout1);
		RAM4K(in=in, load=ramload2, address=address[2..13], out=ramout2);
		RAM4K(in=in, load=ramload3, address=address[2..13], out=ramout3);
		RAM4K(in=in, load=ramload4, address=address[2..13], out=ramout4);
		RAM4K(in=in, load=ramload5, address=address[2..13], out=ramout5);
		RAM4K(in=in, load=ramload6, address=address[2..13], out=ramout6);
		RAM4K(in=in, load=ramload7, address=address[2..13], out=ramout7);
		RAM4K(in=in, load=ramload8, address=address[2..13], out=ramout8);

		Mux8Way16(a=ramout1, b=ramout2, c=ramout3, d=ramout4, e=ramout5, 
			f=ramout6, g=ramout7, h=ramout8, sel=address[0..2], out=out);
}